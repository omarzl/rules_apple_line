diff --git i/rules/hmap.bzl w/rules/hmap.bzl
index 640b833..7aa6440 100644
--- i/rules/hmap.bzl
+++ w/rules/hmap.bzl
@@ -60,12 +60,10 @@ def _make_headermap_impl(ctx):
     # Extract propagated headermaps
     for hdr_provider in ctx.attr.hdr_providers:
         hdrs = []
-        if apple_common.Objc in hdr_provider:
-            hdrs.extend(hdr_provider[apple_common.Objc].header.to_list())
-        elif CcInfo in hdr_provider:
+        if CcInfo in hdr_provider:
             hdrs.extend(hdr_provider[CcInfo].compilation_context.headers.to_list())
         else:
-            fail("hdr_provider must contain either 'CcInfo' or 'objc' provider")
+            fail("hdr_provider must contain 'CcInfo' provider")
 
         for hdr in hdrs:
             if SwiftInfo in hdr_provider and hdr.path.endswith("-Swift.h"):
@@ -121,9 +119,15 @@ def _make_headermap_impl(ctx):
     objc_provider = apple_common.new_objc_provider(
         header = depset([ctx.outputs.headermap]),
     )
+    compilation_context = cc_common.create_compilation_context(
+        headers = depset([ctx.outputs.headermap]),
+    )
+    cc_info = CcInfo(
+        compilation_context = compilation_context,
+    )
     return struct(
         files = depset([ctx.outputs.headermap]),
-        providers = [objc_provider],
+        providers = [objc_provider, cc_info],
         objc = objc_provider,
         headers = depset([ctx.outputs.headermap]),
     )
